# coding: utf-8

"""
    Events

    An API to record and query events raised by clients in order to facilitate KPI tracking.

    The version of the OpenAPI document: 1.0
    Contact: hello@wordlift.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wordlift_client.models.account_config import AccountConfig

class TestAccountConfig(unittest.TestCase):
    """AccountConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccountConfig:
        """Test AccountConfig
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccountConfig`
        """
        model = AccountConfig()
        if include_optional:
            return AccountConfig(
                account = wordlift_client.models.account.Account(
                    analytics_client_factory = '', 
                    analyzer_id = 56, 
                    botify_project = '', 
                    botify_token = '', 
                    botify_username = '', 
                    collection = 'entity', 
                    country = '', 
                    dataset_id = '', 
                    dataset_uri = '', 
                    default_data_formatter = '', 
                    domain_uri = '', 
                    google_search_console_site_url = '', 
                    id = 56, 
                    indexed = True, 
                    is_wordpress = True, 
                    key = '', 
                    language = '', 
                    ng_dataset_id = '', 
                    resolved_url = '', 
                    subscription_id = 56, 
                    url = '', 
                    wp_admin = '', 
                    wp_json = '', 
                    wp_include_exclude_default = '', ),
                site_url = ''
            )
        else:
            return AccountConfig(
        )
        """

    def testAccountConfig(self):
        """Test AccountConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
