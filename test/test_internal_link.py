# coding: utf-8

"""
    GraphQL support

    GraphQL endpoint to query Knowledge Graphs

    The version of the OpenAPI document: 1.0
    Contact: hello@wordlift.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wordlift_client.models.internal_link import InternalLink

class TestInternalLink(unittest.TestCase):
    """InternalLink unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InternalLink:
        """Test InternalLink
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InternalLink`
        """
        model = InternalLink()
        if include_optional:
            return InternalLink(
                destinations = [
                    wordlift_client.models.internal_link_destination.InternalLinkDestination(
                        name = '', 
                        position = 56, 
                        url = '', )
                    ],
                source = wordlift_client.models.internal_link_source.InternalLinkSource(
                    id = '', 
                    name = '', 
                    url = '', )
            )
        else:
            return InternalLink(
                destinations = [
                    wordlift_client.models.internal_link_destination.InternalLinkDestination(
                        name = '', 
                        position = 56, 
                        url = '', )
                    ],
                source = wordlift_client.models.internal_link_source.InternalLinkSource(
                    id = '', 
                    name = '', 
                    url = '', ),
        )
        """

    def testInternalLink(self):
        """Test InternalLink"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
