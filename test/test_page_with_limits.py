# coding: utf-8

"""
    Analysis

    Analyse content using Linked Data and Knowledge Graphs.

    The version of the OpenAPI document: 1.0
    Contact: hello@wordlift.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wordlift_client.models.page_with_limits import PageWithLimits

class TestPageWithLimits(unittest.TestCase):
    """PageWithLimits unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PageWithLimits:
        """Test PageWithLimits
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PageWithLimits`
        """
        model = PageWithLimits()
        if include_optional:
            return PageWithLimits(
                first = '',
                items = [
                    wordlift_client.models.with_limits.WithLimits(
                        account_limits = 56, 
                        applies_to = '', 
                        block = True, 
                        consumption = 1, 
                        id = 56, 
                        limits = 56, 
                        reference_id = 56, 
                        reference_type = 'SUBSCRIPTION', 
                        remaining = 56, 
                        resets_in_seconds = 56, 
                        subscription_limits = 56, )
                    ],
                last = '',
                next = '',
                prev = '',
                var_self = ''
            )
        else:
            return PageWithLimits(
                first = '',
                items = [
                    wordlift_client.models.with_limits.WithLimits(
                        account_limits = 56, 
                        applies_to = '', 
                        block = True, 
                        consumption = 1, 
                        id = 56, 
                        limits = 56, 
                        reference_id = 56, 
                        reference_type = 'SUBSCRIPTION', 
                        remaining = 56, 
                        resets_in_seconds = 56, 
                        subscription_limits = 56, )
                    ],
                last = '',
                next = '',
                prev = '',
                var_self = '',
        )
        """

    def testPageWithLimits(self):
        """Test PageWithLimits"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
