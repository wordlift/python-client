# coding: utf-8

"""
    Analysis

    Analyse content using Linked Data and Knowledge Graphs.

    The version of the OpenAPI document: 1.0
    Contact: hello@wordlift.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wordlift_client.models.response import Response

class TestResponse(unittest.TestCase):
    """Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Response:
        """Test Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Response`
        """
        model = Response()
        if include_optional:
            return Response(
                entities = {
                    'key' : wordlift_client.models.entity.Entity(
                        entity_id = '', 
                        confidence = 1.337, 
                        main_type = '', 
                        types = [
                            ''
                            ], 
                        label = '', 
                        description = '', 
                        images = [
                            ''
                            ], 
                        same_as = [
                            ''
                            ], 
                        properties = wordlift_client.models.properties.Properties(
                            latitude = 1.337, 
                            longitude = 1.337, ), 
                        synonyms = [
                            ''
                            ], )
                    },
                annotations = {
                    'key' : wordlift_client.models.annotation.Annotation(
                        annotation_id = '', 
                        start = 56, 
                        end = 56, 
                        text = '', 
                        entity_matches = [
                            wordlift_client.models.entity_match.EntityMatch(
                                confidence = 1.337, 
                                entity_id = '', )
                            ], )
                    },
                images = [
                    wordlift_client.models.image.Image(
                        label = '', 
                        url = '', )
                    ],
                languages = [
                    ''
                    ],
                topics = [
                    wordlift_client.models.topic.Topic(
                        label = '', 
                        description = '', 
                        uri = '', 
                        confidence = 1.337, 
                        images = [
                            ''
                            ], 
                        same_as = [
                            ''
                            ], )
                    ],
                content = ''
            )
        else:
            return Response(
        )
        """

    def testResponse(self):
        """Test Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
