# coding: utf-8

"""
    WordLift API

    WordLift API

    The version of the OpenAPI document: 1.0
    Contact: hello@wordlift.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wordlift_client.models.link_group_response import LinkGroupResponse

class TestLinkGroupResponse(unittest.TestCase):
    """LinkGroupResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LinkGroupResponse:
        """Test LinkGroupResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LinkGroupResponse`
        """
        model = LinkGroupResponse()
        if include_optional:
            return LinkGroupResponse(
                link_groups = [
                    wordlift_client.models.link_group.LinkGroup(
                        identifier = '', 
                        items = [
                            wordlift_client.models.item.Item(
                                id = '', 
                                query = wordlift_client.models.vector_search_query_request.VectorSearchQueryRequest(
                                    fields = [
                                        ''
                                        ], 
                                    filters = [
                                        wordlift_client.models.filter.Filter(
                                            key = '', 
                                            operator = 'EQ', 
                                            value = wordlift_client.models.filter_value.Filter_value(), 
                                            value_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                        ], 
                                    query_embedding = [
                                        1.337
                                        ], 
                                    query_string = '', 
                                    query_uri = '', 
                                    query_url = '', 
                                    similarity_top_k = 1, ), 
                                source_name = '', )
                            ], 
                        name = '', )
                    ]
            )
        else:
            return LinkGroupResponse(
        )
        """

    def testLinkGroupResponse(self):
        """Test LinkGroupResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
