# coding: utf-8

"""
    Analysis

    Analyse content using Linked Data and Knowledge Graphs.

    The version of the OpenAPI document: 1.0
    Contact: hello@wordlift.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wordlift_client.models.content_generation import ContentGeneration

class TestContentGeneration(unittest.TestCase):
    """ContentGeneration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContentGeneration:
        """Test ContentGeneration
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContentGeneration`
        """
        model = ContentGeneration()
        if include_optional:
            return ContentGeneration(
                account_id = 56,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deleted = True,
                deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                graphql_query = '',
                id = 56,
                max_tokens = 0,
                min_words = 56,
                model_id = 1,
                modified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                name = '',
                penalty = 0.5,
                prompt_template = '',
                stop = '###',
                temperature = 0.4,
                words_to_ignore = [
                    ''
                    ]
            )
        else:
            return ContentGeneration(
                account_id = 56,
                deleted = True,
                graphql_query = '',
                name = '',
        )
        """

    def testContentGeneration(self):
        """Test ContentGeneration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
