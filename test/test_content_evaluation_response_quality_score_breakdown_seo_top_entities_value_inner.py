# coding: utf-8

"""
    Embeddings API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wordlift_client.models.content_evaluation_response_quality_score_breakdown_seo_top_entities_value_inner import ContentEvaluationResponseQualityScoreBreakdownSeoTopEntitiesValueInner

class TestContentEvaluationResponseQualityScoreBreakdownSeoTopEntitiesValueInner(unittest.TestCase):
    """ContentEvaluationResponseQualityScoreBreakdownSeoTopEntitiesValueInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContentEvaluationResponseQualityScoreBreakdownSeoTopEntitiesValueInner:
        """Test ContentEvaluationResponseQualityScoreBreakdownSeoTopEntitiesValueInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContentEvaluationResponseQualityScoreBreakdownSeoTopEntitiesValueInner`
        """
        model = ContentEvaluationResponseQualityScoreBreakdownSeoTopEntitiesValueInner()
        if include_optional:
            return ContentEvaluationResponseQualityScoreBreakdownSeoTopEntitiesValueInner(
                text = '',
                count = 56
            )
        else:
            return ContentEvaluationResponseQualityScoreBreakdownSeoTopEntitiesValueInner(
                text = '',
                count = 56,
        )
        """

    def testContentEvaluationResponseQualityScoreBreakdownSeoTopEntitiesValueInner(self):
        """Test ContentEvaluationResponseQualityScoreBreakdownSeoTopEntitiesValueInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
