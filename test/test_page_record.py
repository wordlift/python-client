# coding: utf-8

"""
    Analysis

    Analyse content using Linked Data and Knowledge Graphs.

    The version of the OpenAPI document: 1.0
    Contact: hello@wordlift.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wordlift_client.models.page_record import PageRecord

class TestPageRecord(unittest.TestCase):
    """PageRecord unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PageRecord:
        """Test PageRecord
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PageRecord`
        """
        model = PageRecord()
        if include_optional:
            return PageRecord(
                first = '',
                items = [
                    wordlift_client.models.record.Record(
                        completion = '', 
                        content_generation_id = 56, 
                        data = wordlift_client.models.json.Json(), 
                        errors = [
                            wordlift_client.models.validation_result.ValidationResult(
                                level_enum = 'RECOMMENDED', 
                                name = '', 
                                result = 'PASS', )
                            ], 
                        has_upvote = True, 
                        id = 56, 
                        is_accepted = True, 
                        modified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        not_in_prompt_words = [
                            ''
                            ], 
                        prompt = '', 
                        repeated_words = {
                            'key' : wordlift_client.models.word_repetition_data.WordRepetitionData(
                                count = 56, 
                                repeated_in_same_sentence = True, )
                            }, 
                        status = 'accepted', 
                        validated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        warnings = [
                            wordlift_client.models.validation_result.ValidationResult(
                                name = '', 
                                result = 'PASS', )
                            ], )
                    ],
                last = '',
                next = '',
                prev = '',
                var_self = ''
            )
        else:
            return PageRecord(
                first = '',
                items = [
                    wordlift_client.models.record.Record(
                        completion = '', 
                        content_generation_id = 56, 
                        data = wordlift_client.models.json.Json(), 
                        errors = [
                            wordlift_client.models.validation_result.ValidationResult(
                                level_enum = 'RECOMMENDED', 
                                name = '', 
                                result = 'PASS', )
                            ], 
                        has_upvote = True, 
                        id = 56, 
                        is_accepted = True, 
                        modified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        not_in_prompt_words = [
                            ''
                            ], 
                        prompt = '', 
                        repeated_words = {
                            'key' : wordlift_client.models.word_repetition_data.WordRepetitionData(
                                count = 56, 
                                repeated_in_same_sentence = True, )
                            }, 
                        status = 'accepted', 
                        validated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        warnings = [
                            wordlift_client.models.validation_result.ValidationResult(
                                name = '', 
                                result = 'PASS', )
                            ], )
                    ],
                last = '',
                next = '',
                prev = '',
                var_self = '',
        )
        """

    def testPageRecord(self):
        """Test PageRecord"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
